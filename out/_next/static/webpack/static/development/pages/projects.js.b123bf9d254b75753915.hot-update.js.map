{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.b123bf9d254b75753915.hot-update.js","sources":["webpack:///./pages/projects/index.js"],"sourcesContent":["import Link from 'next/link'\nimport css from './index.sass'\nimport Projects from '../../projects.js'\n\nexport default class extends React.Component {\n    componentDidMount () {\n        const elements = document.querySelectorAll(`.${css.screenshots}`)\n        \n        for (const screenshots of elements) \n            screenshots.scrollInterval = setInterval( \n                () => this.scrollScreenshots(screenshots),\n                16.66\n            )\n    }\n\n    scrollScreenshots (screenshots) {\n        let { scrollTop, scrollHeight, offsetHeight } = screenshots\n\n        scrollTop++\n\n        if ( scrollTop === (scrollHeight - offsetHeight)/2 + offsetHeight/2 ) \n            scrollTop = 0\n\n        screenshots.scrollTop = scrollTop\n    }\n\n    getProjects () {\n        const projects = []\n\n        for (const project of Projects) {\n            const screenshots = [], links = []\n\n            for (const screenshot of project.screenshots)\n                screenshots.push(\n                    <div key={ screenshot } className={ css.screenshot } style={{\n                        backgroundImage: `url(static/projects/${project.id}/screenshots/${screenshot}.png)`\n                    }} />\n                )\n\n            for (const screenshot of project.screenshots)\n                screenshots.push(\n                    <div key={ screenshot + '0' } className={ css.screenshot } style={{\n                        backgroundImage: `url(static/projects/${project.id}/screenshots/${screenshot}.png)`\n                    }} />\n                )\n\n\n            for (const link of project.links)\n                links.push(\n                    <a \n                        key={ link.url } \n                        type={ link.type } \n                        target=\"_blank\" \n                        className={ css.link } \n                        href={ link.url } \n                        style={{\n                            backgroundImage: `url(static/icons/${link.type}_circle.svg)`\n                        }} \n                    />\n                )\n\n            projects.push(\n                <div \n                    key={ project.id } \n                    className={ `${css.project}` } \n                    style={{\n                        backgroundImage: `url(static/projects/${project.id}/${project.id}.png)`\n                    }}\n                >\n                    <div>\n                        <div className={ css.info }>\n                            <div>\n                                <h2 className={ css.title }>{ project.title }</h2>\n                                { links }\n                            </div>\n\n                            <p className={ css.description }>{ project.description }</p>\n                        </div>\n\n                        <div className={ css.screenshots }>\n                            <div>\n                                { screenshots }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        return projects\n    }\n\n    render () {\n        return (\n            <div className={ css.projects }>\n                { this.getProjects() }\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AALA;AACA;AAEA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AAGA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAUA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAkBA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA+BA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AA7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA8DA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9FA;AACA;;;;;A","sourceRoot":""}